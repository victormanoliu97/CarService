//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CarServiceCore.Context
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Comanda", Namespace="http://schemas.datacontract.org/2004/07/CarServiceCore.Context", IsReference=true)]
    public partial class Comanda : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int AutoIdField;
        
        private CarServiceCore.Context.Automobil AutomobilField;
        
        private CarServiceCore.Context.Client ClientField;
        
        private int ClientIdField;
        
        private int ComandaIdField;
        
        private System.Nullable<System.DateTime> DataFinalizareField;
        
        private System.Nullable<System.DateTime> DataProgramareField;
        
        private System.DateTime DataSystemField;
        
        private string DescriereField;
        
        private int KmBordField;
        
        private string StareComandaField;
        
        private decimal ValoarePieseField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AutoId
        {
            get
            {
                return this.AutoIdField;
            }
            set
            {
                this.AutoIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CarServiceCore.Context.Automobil Automobil
        {
            get
            {
                return this.AutomobilField;
            }
            set
            {
                this.AutomobilField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CarServiceCore.Context.Client Client
        {
            get
            {
                return this.ClientField;
            }
            set
            {
                this.ClientField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ClientId
        {
            get
            {
                return this.ClientIdField;
            }
            set
            {
                this.ClientIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ComandaId
        {
            get
            {
                return this.ComandaIdField;
            }
            set
            {
                this.ComandaIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DataFinalizare
        {
            get
            {
                return this.DataFinalizareField;
            }
            set
            {
                this.DataFinalizareField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DataProgramare
        {
            get
            {
                return this.DataProgramareField;
            }
            set
            {
                this.DataProgramareField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DataSystem
        {
            get
            {
                return this.DataSystemField;
            }
            set
            {
                this.DataSystemField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Descriere
        {
            get
            {
                return this.DescriereField;
            }
            set
            {
                this.DescriereField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int KmBord
        {
            get
            {
                return this.KmBordField;
            }
            set
            {
                this.KmBordField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StareComanda
        {
            get
            {
                return this.StareComandaField;
            }
            set
            {
                this.StareComandaField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ValoarePiese
        {
            get
            {
                return this.ValoarePieseField;
            }
            set
            {
                this.ValoarePieseField = value;
            }
        }
    }
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Imagine", Namespace="http://schemas.datacontract.org/2004/07/CarServiceCore.Context")]
    public partial class Imagine : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private System.DateTime DataImagineField;
        
        private string DescriereField;
        
        private byte[] FotoField;
        
        private int ImagineIdField;
        
        private string TitluField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DataImagine
        {
            get
            {
                return this.DataImagineField;
            }
            set
            {
                this.DataImagineField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Descriere
        {
            get
            {
                return this.DescriereField;
            }
            set
            {
                this.DescriereField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Foto
        {
            get
            {
                return this.FotoField;
            }
            set
            {
                this.FotoField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ImagineId
        {
            get
            {
                return this.ImagineIdField;
            }
            set
            {
                this.ImagineIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Titlu
        {
            get
            {
                return this.TitluField;
            }
            set
            {
                this.TitluField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DetaliiComanda", Namespace="http://schemas.datacontract.org/2004/07/CarServiceCore.Context", IsReference=true)]
    public partial class DetaliiComanda : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int AutoIdField;
        
        private CarServiceCore.Context.Automobil AutomobilField;
        
        private CarServiceCore.Context.Comanda ComandaField;
        
        private int ComandaIdField;
        
        private int DetaliiComandaIdField;
        
        private CarServiceCore.Context.Imagine ImagineField;
        
        private int ImagineIdField;
        
        private CarServiceCore.Context.Mecanic MecanicField;
        
        private int MecanicIdField;
        
        private CarServiceCore.Context.Operatie OperatieField;
        
        private int OperatieIdField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AutoId
        {
            get
            {
                return this.AutoIdField;
            }
            set
            {
                this.AutoIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CarServiceCore.Context.Automobil Automobil
        {
            get
            {
                return this.AutomobilField;
            }
            set
            {
                this.AutomobilField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CarServiceCore.Context.Comanda Comanda
        {
            get
            {
                return this.ComandaField;
            }
            set
            {
                this.ComandaField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ComandaId
        {
            get
            {
                return this.ComandaIdField;
            }
            set
            {
                this.ComandaIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DetaliiComandaId
        {
            get
            {
                return this.DetaliiComandaIdField;
            }
            set
            {
                this.DetaliiComandaIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CarServiceCore.Context.Imagine Imagine
        {
            get
            {
                return this.ImagineField;
            }
            set
            {
                this.ImagineField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ImagineId
        {
            get
            {
                return this.ImagineIdField;
            }
            set
            {
                this.ImagineIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CarServiceCore.Context.Mecanic Mecanic
        {
            get
            {
                return this.MecanicField;
            }
            set
            {
                this.MecanicField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MecanicId
        {
            get
            {
                return this.MecanicIdField;
            }
            set
            {
                this.MecanicIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CarServiceCore.Context.Operatie Operatie
        {
            get
            {
                return this.OperatieField;
            }
            set
            {
                this.OperatieField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OperatieId
        {
            get
            {
                return this.OperatieIdField;
            }
            set
            {
                this.OperatieIdField = value;
            }
        }
    }
}


[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(ConfigurationName="IOrderService")]
public interface IOrderService
{
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/GetOrdersOfClient", ReplyAction="http://tempuri.org/IOrderService/GetOrdersOfClientResponse")]
    CarServiceCore.Context.Comanda[] GetOrdersOfClient(CarServiceCore.Context.Client client);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/GetOrdersOfClient", ReplyAction="http://tempuri.org/IOrderService/GetOrdersOfClientResponse")]
    System.Threading.Tasks.Task<CarServiceCore.Context.Comanda[]> GetOrdersOfClientAsync(CarServiceCore.Context.Client client);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/AddOrder", ReplyAction="http://tempuri.org/IOrderService/AddOrderResponse")]
    void AddOrder(CarServiceCore.Context.Comanda order);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/AddOrder", ReplyAction="http://tempuri.org/IOrderService/AddOrderResponse")]
    System.Threading.Tasks.Task AddOrderAsync(CarServiceCore.Context.Comanda order);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/DeleteOrder", ReplyAction="http://tempuri.org/IOrderService/DeleteOrderResponse")]
    void DeleteOrder(CarServiceCore.Context.Comanda order);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/DeleteOrder", ReplyAction="http://tempuri.org/IOrderService/DeleteOrderResponse")]
    System.Threading.Tasks.Task DeleteOrderAsync(CarServiceCore.Context.Comanda order);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/UpdateOrder", ReplyAction="http://tempuri.org/IOrderService/UpdateOrderResponse")]
    void UpdateOrder(CarServiceCore.Context.Comanda order);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/UpdateOrder", ReplyAction="http://tempuri.org/IOrderService/UpdateOrderResponse")]
    System.Threading.Tasks.Task UpdateOrderAsync(CarServiceCore.Context.Comanda order);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/OrderExists", ReplyAction="http://tempuri.org/IOrderService/OrderExistsResponse")]
    bool OrderExists(CarServiceCore.Context.Comanda order);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/OrderExists", ReplyAction="http://tempuri.org/IOrderService/OrderExistsResponse")]
    System.Threading.Tasks.Task<bool> OrderExistsAsync(CarServiceCore.Context.Comanda order);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/SetStatusToOrder", ReplyAction="http://tempuri.org/IOrderService/SetStatusToOrderResponse")]
    void SetStatusToOrder(CarServiceCore.Context.Comanda order, string status);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/SetStatusToOrder", ReplyAction="http://tempuri.org/IOrderService/SetStatusToOrderResponse")]
    System.Threading.Tasks.Task SetStatusToOrderAsync(CarServiceCore.Context.Comanda order, string status);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/GetOrderWithStatus", ReplyAction="http://tempuri.org/IOrderService/GetOrderWithStatusResponse")]
    CarServiceCore.Context.Comanda[] GetOrderWithStatus(CarServiceCore.Context.Comanda order, string status);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/GetOrderWithStatus", ReplyAction="http://tempuri.org/IOrderService/GetOrderWithStatusResponse")]
    System.Threading.Tasks.Task<CarServiceCore.Context.Comanda[]> GetOrderWithStatusAsync(CarServiceCore.Context.Comanda order, string status);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/GetOperationsForOrder", ReplyAction="http://tempuri.org/IOrderService/GetOperationsForOrderResponse")]
    CarServiceCore.Context.Operatie[] GetOperationsForOrder(CarServiceCore.Context.Comanda order);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/GetOperationsForOrder", ReplyAction="http://tempuri.org/IOrderService/GetOperationsForOrderResponse")]
    System.Threading.Tasks.Task<CarServiceCore.Context.Operatie[]> GetOperationsForOrderAsync(CarServiceCore.Context.Comanda order);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/GetImagesForOrder", ReplyAction="http://tempuri.org/IOrderService/GetImagesForOrderResponse")]
    CarServiceCore.Context.Imagine[] GetImagesForOrder(CarServiceCore.Context.Comanda order);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/GetImagesForOrder", ReplyAction="http://tempuri.org/IOrderService/GetImagesForOrderResponse")]
    System.Threading.Tasks.Task<CarServiceCore.Context.Imagine[]> GetImagesForOrderAsync(CarServiceCore.Context.Comanda order);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/GetMechanicsForOrder", ReplyAction="http://tempuri.org/IOrderService/GetMechanicsForOrderResponse")]
    CarServiceCore.Context.Mecanic[] GetMechanicsForOrder(CarServiceCore.Context.Comanda order);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/GetMechanicsForOrder", ReplyAction="http://tempuri.org/IOrderService/GetMechanicsForOrderResponse")]
    System.Threading.Tasks.Task<CarServiceCore.Context.Mecanic[]> GetMechanicsForOrderAsync(CarServiceCore.Context.Comanda order);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/GetOrdersBetweenDates", ReplyAction="http://tempuri.org/IOrderService/GetOrdersBetweenDatesResponse")]
    CarServiceCore.Context.Comanda[] GetOrdersBetweenDates(System.DateTime fromDate, System.DateTime toDate);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/GetOrdersBetweenDates", ReplyAction="http://tempuri.org/IOrderService/GetOrdersBetweenDatesResponse")]
    System.Threading.Tasks.Task<CarServiceCore.Context.Comanda[]> GetOrdersBetweenDatesAsync(System.DateTime fromDate, System.DateTime toDate);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/AddOrderDetailsForOrder", ReplyAction="http://tempuri.org/IOrderService/AddOrderDetailsForOrderResponse")]
    void AddOrderDetailsForOrder(CarServiceCore.Context.DetaliiComanda orderDetail);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/AddOrderDetailsForOrder", ReplyAction="http://tempuri.org/IOrderService/AddOrderDetailsForOrderResponse")]
    System.Threading.Tasks.Task AddOrderDetailsForOrderAsync(CarServiceCore.Context.DetaliiComanda orderDetail);
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface IOrderServiceChannel : IOrderService, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class OrderServiceClient : System.ServiceModel.ClientBase<IOrderService>, IOrderService
{
    
    public OrderServiceClient()
    {
    }
    
    public OrderServiceClient(string endpointConfigurationName) : 
            base(endpointConfigurationName)
    {
    }
    
    public OrderServiceClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public OrderServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public OrderServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }
    
    public CarServiceCore.Context.Comanda[] GetOrdersOfClient(CarServiceCore.Context.Client client)
    {
        return base.Channel.GetOrdersOfClient(client);
    }
    
    public System.Threading.Tasks.Task<CarServiceCore.Context.Comanda[]> GetOrdersOfClientAsync(CarServiceCore.Context.Client client)
    {
        return base.Channel.GetOrdersOfClientAsync(client);
    }
    
    public void AddOrder(CarServiceCore.Context.Comanda order)
    {
        base.Channel.AddOrder(order);
    }
    
    public System.Threading.Tasks.Task AddOrderAsync(CarServiceCore.Context.Comanda order)
    {
        return base.Channel.AddOrderAsync(order);
    }
    
    public void DeleteOrder(CarServiceCore.Context.Comanda order)
    {
        base.Channel.DeleteOrder(order);
    }
    
    public System.Threading.Tasks.Task DeleteOrderAsync(CarServiceCore.Context.Comanda order)
    {
        return base.Channel.DeleteOrderAsync(order);
    }
    
    public void UpdateOrder(CarServiceCore.Context.Comanda order)
    {
        base.Channel.UpdateOrder(order);
    }
    
    public System.Threading.Tasks.Task UpdateOrderAsync(CarServiceCore.Context.Comanda order)
    {
        return base.Channel.UpdateOrderAsync(order);
    }
    
    public bool OrderExists(CarServiceCore.Context.Comanda order)
    {
        return base.Channel.OrderExists(order);
    }
    
    public System.Threading.Tasks.Task<bool> OrderExistsAsync(CarServiceCore.Context.Comanda order)
    {
        return base.Channel.OrderExistsAsync(order);
    }
    
    public void SetStatusToOrder(CarServiceCore.Context.Comanda order, string status)
    {
        base.Channel.SetStatusToOrder(order, status);
    }
    
    public System.Threading.Tasks.Task SetStatusToOrderAsync(CarServiceCore.Context.Comanda order, string status)
    {
        return base.Channel.SetStatusToOrderAsync(order, status);
    }
    
    public CarServiceCore.Context.Comanda[] GetOrderWithStatus(CarServiceCore.Context.Comanda order, string status)
    {
        return base.Channel.GetOrderWithStatus(order, status);
    }
    
    public System.Threading.Tasks.Task<CarServiceCore.Context.Comanda[]> GetOrderWithStatusAsync(CarServiceCore.Context.Comanda order, string status)
    {
        return base.Channel.GetOrderWithStatusAsync(order, status);
    }
    
    public CarServiceCore.Context.Operatie[] GetOperationsForOrder(CarServiceCore.Context.Comanda order)
    {
        return base.Channel.GetOperationsForOrder(order);
    }
    
    public System.Threading.Tasks.Task<CarServiceCore.Context.Operatie[]> GetOperationsForOrderAsync(CarServiceCore.Context.Comanda order)
    {
        return base.Channel.GetOperationsForOrderAsync(order);
    }
    
    public CarServiceCore.Context.Imagine[] GetImagesForOrder(CarServiceCore.Context.Comanda order)
    {
        return base.Channel.GetImagesForOrder(order);
    }
    
    public System.Threading.Tasks.Task<CarServiceCore.Context.Imagine[]> GetImagesForOrderAsync(CarServiceCore.Context.Comanda order)
    {
        return base.Channel.GetImagesForOrderAsync(order);
    }
    
    public CarServiceCore.Context.Mecanic[] GetMechanicsForOrder(CarServiceCore.Context.Comanda order)
    {
        return base.Channel.GetMechanicsForOrder(order);
    }
    
    public System.Threading.Tasks.Task<CarServiceCore.Context.Mecanic[]> GetMechanicsForOrderAsync(CarServiceCore.Context.Comanda order)
    {
        return base.Channel.GetMechanicsForOrderAsync(order);
    }
    
    public CarServiceCore.Context.Comanda[] GetOrdersBetweenDates(System.DateTime fromDate, System.DateTime toDate)
    {
        return base.Channel.GetOrdersBetweenDates(fromDate, toDate);
    }
    
    public System.Threading.Tasks.Task<CarServiceCore.Context.Comanda[]> GetOrdersBetweenDatesAsync(System.DateTime fromDate, System.DateTime toDate)
    {
        return base.Channel.GetOrdersBetweenDatesAsync(fromDate, toDate);
    }
    
    public void AddOrderDetailsForOrder(CarServiceCore.Context.DetaliiComanda orderDetail)
    {
        base.Channel.AddOrderDetailsForOrder(orderDetail);
    }
    
    public System.Threading.Tasks.Task AddOrderDetailsForOrderAsync(CarServiceCore.Context.DetaliiComanda orderDetail)
    {
        return base.Channel.AddOrderDetailsForOrderAsync(orderDetail);
    }
}
