//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CarServiceCore.Context
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Mecanic", Namespace="http://schemas.datacontract.org/2004/07/CarServiceCore.Context", IsReference=true)]
    public partial class Mecanic : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int MecanicIdField;
        
        private string NumeField;
        
        private string PrenumeField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MecanicId
        {
            get
            {
                return this.MecanicIdField;
            }
            set
            {
                this.MecanicIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nume
        {
            get
            {
                return this.NumeField;
            }
            set
            {
                this.NumeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Prenume
        {
            get
            {
                return this.PrenumeField;
            }
            set
            {
                this.PrenumeField = value;
            }
        }
    }
}


[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(ConfigurationName="IMechanicService")]
public interface IMechanicService
{
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMechanicService/GetMechanics", ReplyAction="http://tempuri.org/IMechanicService/GetMechanicsResponse")]
    CarServiceCore.Context.Mecanic[] GetMechanics();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMechanicService/GetMechanics", ReplyAction="http://tempuri.org/IMechanicService/GetMechanicsResponse")]
    System.Threading.Tasks.Task<CarServiceCore.Context.Mecanic[]> GetMechanicsAsync();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMechanicService/AddMechanic", ReplyAction="http://tempuri.org/IMechanicService/AddMechanicResponse")]
    void AddMechanic(CarServiceCore.Context.Mecanic mechanic);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMechanicService/AddMechanic", ReplyAction="http://tempuri.org/IMechanicService/AddMechanicResponse")]
    System.Threading.Tasks.Task AddMechanicAsync(CarServiceCore.Context.Mecanic mechanic);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMechanicService/MechanicExists", ReplyAction="http://tempuri.org/IMechanicService/MechanicExistsResponse")]
    bool MechanicExists(CarServiceCore.Context.Mecanic mechanic);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMechanicService/MechanicExists", ReplyAction="http://tempuri.org/IMechanicService/MechanicExistsResponse")]
    System.Threading.Tasks.Task<bool> MechanicExistsAsync(CarServiceCore.Context.Mecanic mechanic);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMechanicService/DeleteMechanic", ReplyAction="http://tempuri.org/IMechanicService/DeleteMechanicResponse")]
    void DeleteMechanic(int mechanicId);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMechanicService/DeleteMechanic", ReplyAction="http://tempuri.org/IMechanicService/DeleteMechanicResponse")]
    System.Threading.Tasks.Task DeleteMechanicAsync(int mechanicId);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMechanicService/UpdateMechanic", ReplyAction="http://tempuri.org/IMechanicService/UpdateMechanicResponse")]
    void UpdateMechanic(CarServiceCore.Context.Mecanic mechanic);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMechanicService/UpdateMechanic", ReplyAction="http://tempuri.org/IMechanicService/UpdateMechanicResponse")]
    System.Threading.Tasks.Task UpdateMechanicAsync(CarServiceCore.Context.Mecanic mechanic);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMechanicService/GetMechanic", ReplyAction="http://tempuri.org/IMechanicService/GetMechanicResponse")]
    CarServiceCore.Context.Mecanic GetMechanic(CarServiceCore.Context.Mecanic mechanic);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMechanicService/GetMechanic", ReplyAction="http://tempuri.org/IMechanicService/GetMechanicResponse")]
    System.Threading.Tasks.Task<CarServiceCore.Context.Mecanic> GetMechanicAsync(CarServiceCore.Context.Mecanic mechanic);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMechanicService/PartialMechanicsSearch", ReplyAction="http://tempuri.org/IMechanicService/PartialMechanicsSearchResponse")]
    CarServiceCore.Context.Mecanic[] PartialMechanicsSearch(CarServiceCore.Context.Mecanic mechanic);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMechanicService/PartialMechanicsSearch", ReplyAction="http://tempuri.org/IMechanicService/PartialMechanicsSearchResponse")]
    System.Threading.Tasks.Task<CarServiceCore.Context.Mecanic[]> PartialMechanicsSearchAsync(CarServiceCore.Context.Mecanic mechanic);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMechanicService/GetAvailableMechanicsToExecuteOperation", ReplyAction="http://tempuri.org/IMechanicService/GetAvailableMechanicsToExecuteOperationRespon" +
        "se")]
    CarServiceCore.Context.Mecanic[] GetAvailableMechanicsToExecuteOperation();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMechanicService/GetAvailableMechanicsToExecuteOperation", ReplyAction="http://tempuri.org/IMechanicService/GetAvailableMechanicsToExecuteOperationRespon" +
        "se")]
    System.Threading.Tasks.Task<CarServiceCore.Context.Mecanic[]> GetAvailableMechanicsToExecuteOperationAsync();
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface IMechanicServiceChannel : IMechanicService, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class MechanicServiceClient : System.ServiceModel.ClientBase<IMechanicService>, IMechanicService
{
    
    public MechanicServiceClient()
    {
    }
    
    public MechanicServiceClient(string endpointConfigurationName) : 
            base(endpointConfigurationName)
    {
    }
    
    public MechanicServiceClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public MechanicServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public MechanicServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }
    
    public CarServiceCore.Context.Mecanic[] GetMechanics()
    {
        return base.Channel.GetMechanics();
    }
    
    public System.Threading.Tasks.Task<CarServiceCore.Context.Mecanic[]> GetMechanicsAsync()
    {
        return base.Channel.GetMechanicsAsync();
    }
    
    public void AddMechanic(CarServiceCore.Context.Mecanic mechanic)
    {
        base.Channel.AddMechanic(mechanic);
    }
    
    public System.Threading.Tasks.Task AddMechanicAsync(CarServiceCore.Context.Mecanic mechanic)
    {
        return base.Channel.AddMechanicAsync(mechanic);
    }
    
    public bool MechanicExists(CarServiceCore.Context.Mecanic mechanic)
    {
        return base.Channel.MechanicExists(mechanic);
    }
    
    public System.Threading.Tasks.Task<bool> MechanicExistsAsync(CarServiceCore.Context.Mecanic mechanic)
    {
        return base.Channel.MechanicExistsAsync(mechanic);
    }
    
    public void DeleteMechanic(int mechanicId)
    {
        base.Channel.DeleteMechanic(mechanicId);
    }
    
    public System.Threading.Tasks.Task DeleteMechanicAsync(int mechanicId)
    {
        return base.Channel.DeleteMechanicAsync(mechanicId);
    }
    
    public void UpdateMechanic(CarServiceCore.Context.Mecanic mechanic)
    {
        base.Channel.UpdateMechanic(mechanic);
    }
    
    public System.Threading.Tasks.Task UpdateMechanicAsync(CarServiceCore.Context.Mecanic mechanic)
    {
        return base.Channel.UpdateMechanicAsync(mechanic);
    }
    
    public CarServiceCore.Context.Mecanic GetMechanic(CarServiceCore.Context.Mecanic mechanic)
    {
        return base.Channel.GetMechanic(mechanic);
    }
    
    public System.Threading.Tasks.Task<CarServiceCore.Context.Mecanic> GetMechanicAsync(CarServiceCore.Context.Mecanic mechanic)
    {
        return base.Channel.GetMechanicAsync(mechanic);
    }
    
    public CarServiceCore.Context.Mecanic[] PartialMechanicsSearch(CarServiceCore.Context.Mecanic mechanic)
    {
        return base.Channel.PartialMechanicsSearch(mechanic);
    }
    
    public System.Threading.Tasks.Task<CarServiceCore.Context.Mecanic[]> PartialMechanicsSearchAsync(CarServiceCore.Context.Mecanic mechanic)
    {
        return base.Channel.PartialMechanicsSearchAsync(mechanic);
    }
    
    public CarServiceCore.Context.Mecanic[] GetAvailableMechanicsToExecuteOperation()
    {
        return base.Channel.GetAvailableMechanicsToExecuteOperation();
    }
    
    public System.Threading.Tasks.Task<CarServiceCore.Context.Mecanic[]> GetAvailableMechanicsToExecuteOperationAsync()
    {
        return base.Channel.GetAvailableMechanicsToExecuteOperationAsync();
    }
}
