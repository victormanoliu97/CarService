//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CarServiceCore.Context
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Client", Namespace="http://schemas.datacontract.org/2004/07/CarServiceCore.Context", IsReference=true)]
    public partial class Client : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string AdresaField;
        
        private int ClientIdField;
        
        private string EmailField;
        
        private string JudetField;
        
        private string LocalitateField;
        
        private string NumeField;
        
        private string PrenumeField;
        
        private string TelefonField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Adresa
        {
            get
            {
                return this.AdresaField;
            }
            set
            {
                this.AdresaField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ClientId
        {
            get
            {
                return this.ClientIdField;
            }
            set
            {
                this.ClientIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email
        {
            get
            {
                return this.EmailField;
            }
            set
            {
                this.EmailField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Judet
        {
            get
            {
                return this.JudetField;
            }
            set
            {
                this.JudetField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Localitate
        {
            get
            {
                return this.LocalitateField;
            }
            set
            {
                this.LocalitateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nume
        {
            get
            {
                return this.NumeField;
            }
            set
            {
                this.NumeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Prenume
        {
            get
            {
                return this.PrenumeField;
            }
            set
            {
                this.PrenumeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Telefon
        {
            get
            {
                return this.TelefonField;
            }
            set
            {
                this.TelefonField = value;
            }
        }
    }
}


[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(ConfigurationName="IClientService")]
public interface IClientService
{
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetClients", ReplyAction="http://tempuri.org/IClientService/GetClientsResponse")]
    CarServiceCore.Context.Client[] GetClients();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetClients", ReplyAction="http://tempuri.org/IClientService/GetClientsResponse")]
    System.Threading.Tasks.Task<CarServiceCore.Context.Client[]> GetClientsAsync();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/AddClient", ReplyAction="http://tempuri.org/IClientService/AddClientResponse")]
    void AddClient(CarServiceCore.Context.Client client);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/AddClient", ReplyAction="http://tempuri.org/IClientService/AddClientResponse")]
    System.Threading.Tasks.Task AddClientAsync(CarServiceCore.Context.Client client);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/ClientExists", ReplyAction="http://tempuri.org/IClientService/ClientExistsResponse")]
    bool ClientExists(CarServiceCore.Context.Client client);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/ClientExists", ReplyAction="http://tempuri.org/IClientService/ClientExistsResponse")]
    System.Threading.Tasks.Task<bool> ClientExistsAsync(CarServiceCore.Context.Client client);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/DeleteClient", ReplyAction="http://tempuri.org/IClientService/DeleteClientResponse")]
    void DeleteClient(int clientId);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/DeleteClient", ReplyAction="http://tempuri.org/IClientService/DeleteClientResponse")]
    System.Threading.Tasks.Task DeleteClientAsync(int clientId);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/UpdateClient", ReplyAction="http://tempuri.org/IClientService/UpdateClientResponse")]
    void UpdateClient(CarServiceCore.Context.Client client);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/UpdateClient", ReplyAction="http://tempuri.org/IClientService/UpdateClientResponse")]
    System.Threading.Tasks.Task UpdateClientAsync(CarServiceCore.Context.Client client);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetClient", ReplyAction="http://tempuri.org/IClientService/GetClientResponse")]
    CarServiceCore.Context.Client GetClient(int clientIc);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetClient", ReplyAction="http://tempuri.org/IClientService/GetClientResponse")]
    System.Threading.Tasks.Task<CarServiceCore.Context.Client> GetClientAsync(int clientIc);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/PartialSearchClients", ReplyAction="http://tempuri.org/IClientService/PartialSearchClientsResponse")]
    CarServiceCore.Context.Client[] PartialSearchClients(string firstName, string lastName);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/PartialSearchClients", ReplyAction="http://tempuri.org/IClientService/PartialSearchClientsResponse")]
    System.Threading.Tasks.Task<CarServiceCore.Context.Client[]> PartialSearchClientsAsync(string firstName, string lastName);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetAutosOfClient", ReplyAction="http://tempuri.org/IClientService/GetAutosOfClientResponse")]
    CarServiceCore.Context.Automobil[] GetAutosOfClient(CarServiceCore.Context.Client client);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetAutosOfClient", ReplyAction="http://tempuri.org/IClientService/GetAutosOfClientResponse")]
    System.Threading.Tasks.Task<CarServiceCore.Context.Automobil[]> GetAutosOfClientAsync(CarServiceCore.Context.Client client);
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface IClientServiceChannel : IClientService, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class ClientServiceClient : System.ServiceModel.ClientBase<IClientService>, IClientService
{
    
    public ClientServiceClient()
    {
    }
    
    public ClientServiceClient(string endpointConfigurationName) : 
            base(endpointConfigurationName)
    {
    }
    
    public ClientServiceClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public ClientServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public ClientServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }
    
    public CarServiceCore.Context.Client[] GetClients()
    {
        return base.Channel.GetClients();
    }
    
    public System.Threading.Tasks.Task<CarServiceCore.Context.Client[]> GetClientsAsync()
    {
        return base.Channel.GetClientsAsync();
    }
    
    public void AddClient(CarServiceCore.Context.Client client)
    {
        base.Channel.AddClient(client);
    }
    
    public System.Threading.Tasks.Task AddClientAsync(CarServiceCore.Context.Client client)
    {
        return base.Channel.AddClientAsync(client);
    }
    
    public bool ClientExists(CarServiceCore.Context.Client client)
    {
        return base.Channel.ClientExists(client);
    }
    
    public System.Threading.Tasks.Task<bool> ClientExistsAsync(CarServiceCore.Context.Client client)
    {
        return base.Channel.ClientExistsAsync(client);
    }
    
    public void DeleteClient(int clientId)
    {
        base.Channel.DeleteClient(clientId);
    }
    
    public System.Threading.Tasks.Task DeleteClientAsync(int clientId)
    {
        return base.Channel.DeleteClientAsync(clientId);
    }
    
    public void UpdateClient(CarServiceCore.Context.Client client)
    {
        base.Channel.UpdateClient(client);
    }
    
    public System.Threading.Tasks.Task UpdateClientAsync(CarServiceCore.Context.Client client)
    {
        return base.Channel.UpdateClientAsync(client);
    }
    
    public CarServiceCore.Context.Client GetClient(int clientIc)
    {
        return base.Channel.GetClient(clientIc);
    }
    
    public System.Threading.Tasks.Task<CarServiceCore.Context.Client> GetClientAsync(int clientIc)
    {
        return base.Channel.GetClientAsync(clientIc);
    }
    
    public CarServiceCore.Context.Client[] PartialSearchClients(string firstName, string lastName)
    {
        return base.Channel.PartialSearchClients(firstName, lastName);
    }
    
    public System.Threading.Tasks.Task<CarServiceCore.Context.Client[]> PartialSearchClientsAsync(string firstName, string lastName)
    {
        return base.Channel.PartialSearchClientsAsync(firstName, lastName);
    }
    
    public CarServiceCore.Context.Automobil[] GetAutosOfClient(CarServiceCore.Context.Client client)
    {
        return base.Channel.GetAutosOfClient(client);
    }
    
    public System.Threading.Tasks.Task<CarServiceCore.Context.Automobil[]> GetAutosOfClientAsync(CarServiceCore.Context.Client client)
    {
        return base.Channel.GetAutosOfClientAsync(client);
    }
}
