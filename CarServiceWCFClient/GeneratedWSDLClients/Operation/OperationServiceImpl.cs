//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CarServiceCore.Context
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Operatie", Namespace="http://schemas.datacontract.org/2004/07/CarServiceCore.Context", IsReference=true)]
    public partial class Operatie : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string DenumireField;
        
        private int OperatieIdField;
        
        private System.Nullable<decimal> TimpExecutieField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Denumire
        {
            get
            {
                return this.DenumireField;
            }
            set
            {
                this.DenumireField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OperatieId
        {
            get
            {
                return this.OperatieIdField;
            }
            set
            {
                this.OperatieIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TimpExecutie
        {
            get
            {
                return this.TimpExecutieField;
            }
            set
            {
                this.TimpExecutieField = value;
            }
        }
    }
}


[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(ConfigurationName="IOperationService")]
public interface IOperationService
{
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOperationService/GetAllOperations", ReplyAction="http://tempuri.org/IOperationService/GetAllOperationsResponse")]
    CarServiceCore.Context.Operatie[] GetAllOperations();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOperationService/GetAllOperations", ReplyAction="http://tempuri.org/IOperationService/GetAllOperationsResponse")]
    System.Threading.Tasks.Task<CarServiceCore.Context.Operatie[]> GetAllOperationsAsync();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOperationService/AddOperation", ReplyAction="http://tempuri.org/IOperationService/AddOperationResponse")]
    void AddOperation(CarServiceCore.Context.Operatie operation);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOperationService/AddOperation", ReplyAction="http://tempuri.org/IOperationService/AddOperationResponse")]
    System.Threading.Tasks.Task AddOperationAsync(CarServiceCore.Context.Operatie operation);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOperationService/DeleteOperation", ReplyAction="http://tempuri.org/IOperationService/DeleteOperationResponse")]
    void DeleteOperation(int operationId);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOperationService/DeleteOperation", ReplyAction="http://tempuri.org/IOperationService/DeleteOperationResponse")]
    System.Threading.Tasks.Task DeleteOperationAsync(int operationId);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOperationService/UpdateOperation", ReplyAction="http://tempuri.org/IOperationService/UpdateOperationResponse")]
    void UpdateOperation(CarServiceCore.Context.Operatie operation);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOperationService/UpdateOperation", ReplyAction="http://tempuri.org/IOperationService/UpdateOperationResponse")]
    System.Threading.Tasks.Task UpdateOperationAsync(CarServiceCore.Context.Operatie operation);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOperationService/OperationExists", ReplyAction="http://tempuri.org/IOperationService/OperationExistsResponse")]
    bool OperationExists(CarServiceCore.Context.Operatie operation);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOperationService/OperationExists", ReplyAction="http://tempuri.org/IOperationService/OperationExistsResponse")]
    System.Threading.Tasks.Task<bool> OperationExistsAsync(CarServiceCore.Context.Operatie operation);
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface IOperationServiceChannel : IOperationService, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class OperationServiceClient : System.ServiceModel.ClientBase<IOperationService>, IOperationService
{
    
    public OperationServiceClient()
    {
    }
    
    public OperationServiceClient(string endpointConfigurationName) : 
            base(endpointConfigurationName)
    {
    }
    
    public OperationServiceClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public OperationServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public OperationServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }
    
    public CarServiceCore.Context.Operatie[] GetAllOperations()
    {
        return base.Channel.GetAllOperations();
    }
    
    public System.Threading.Tasks.Task<CarServiceCore.Context.Operatie[]> GetAllOperationsAsync()
    {
        return base.Channel.GetAllOperationsAsync();
    }
    
    public void AddOperation(CarServiceCore.Context.Operatie operation)
    {
        base.Channel.AddOperation(operation);
    }
    
    public System.Threading.Tasks.Task AddOperationAsync(CarServiceCore.Context.Operatie operation)
    {
        return base.Channel.AddOperationAsync(operation);
    }
    
    public void DeleteOperation(int operationId)
    {
        base.Channel.DeleteOperation(operationId);
    }
    
    public System.Threading.Tasks.Task DeleteOperationAsync(int operationId)
    {
        return base.Channel.DeleteOperationAsync(operationId);
    }
    
    public void UpdateOperation(CarServiceCore.Context.Operatie operation)
    {
        base.Channel.UpdateOperation(operation);
    }
    
    public System.Threading.Tasks.Task UpdateOperationAsync(CarServiceCore.Context.Operatie operation)
    {
        return base.Channel.UpdateOperationAsync(operation);
    }
    
    public bool OperationExists(CarServiceCore.Context.Operatie operation)
    {
        return base.Channel.OperationExists(operation);
    }
    
    public System.Threading.Tasks.Task<bool> OperationExistsAsync(CarServiceCore.Context.Operatie operation)
    {
        return base.Channel.OperationExistsAsync(operation);
    }
}
